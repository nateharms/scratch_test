comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 48
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="CO[O]"), Molecule(SMILES="[OH]")], products=[Molecule(SMILES="O"), Molecule(SMILES="[CH2]O[O]")], degeneracy=3, pairs=[[Molecule(SMILES="CO[O]"), Molecule(SMILES="[CH2]O[O]")], [Molecule(SMILES="[OH]"), Molecule(SMILES="O")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="CO[O]"), Molecule(SMILES="[OH]")]
[Molecule(SMILES="O"), Molecule(SMILES="[CH2]O[O]")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="CO[O]"), Molecule(SMILES="[OH]")], products=[Molecule(SMILES="O"), Molecule(SMILES="[CH2]O[O]")], degeneracy=3, pairs=[[Molecule(SMILES="CO[O]"), Molecule(SMILES="[CH2]O[O]")], [Molecule(SMILES="[OH]"), Molecule(SMILES="O")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "CO[O]"> + <Molecule "[OH]"> <=> <Molecule "O"> + <Molecule "[CH2]O[O]">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="CO[O]"), Molecule(SMILES="[OH]")], products=[Molecule(SMILES="O"), Molecule(SMILES="[CH2]O[O]")], degeneracy=3, pairs=[[Molecule(SMILES="CO[O]"), Molecule(SMILES="[CH2]O[O]")], [Molecule(SMILES="[OH]"), Molecule(SMILES="O")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "CO[O]"> + <Molecule "[OH]"> <=> <Molecule "O"> + <Molecule "[CH2]O[O]">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/CO[O]+[OH]_O+[CH2]O[O].kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for CO[O].[OH]
reaction.py:338 bmPreEdit INFO Changing lower limit 2.553631 to 2.528236
reaction.py:338 bmPreEdit INFO Changing lower limit 2.4 to 2.364946204
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CO[O]+[OH]_O+[CH2]O[O]Est.gjf
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CO[O]+[OH]_O+[CH2]O[O]RxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/CO[O]+[OH]_O+[CH2]O[O].log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CO[O]+[OH]_O+[CH2]O[O]IRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/CO[O]+[OH]_O+[CH2]O[O]IRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/CO[O]+[OH]_O+[CH2]O[O].ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/CO[O]+[OH]_O+[CH2]O[O].log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/WTFNSXYULBQCQV-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/WTFNSXYULBQCQV-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/TUJKJAMUKRIRHC-UHFFFAOYSA-u1.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/TUJKJAMUKRIRHC-UHFFFAOYSA-u1.symm
symmetry.py:188 parse INFO Point group: Cinfv
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/XLYOFNOQVPJJNP-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/XLYOFNOQVPJJNP-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2v
gaussian.py:111 verifyOutputFile INFO Output file /gss_gpfs_scratch/harms.n/QMscratch/SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2.log does not exist.
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:275 generateQMData INFO Trying GaussianMolM062X attempt 1 of 36 on molecule [CH2]O[O].
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2.log
gaussian.py:278 generateQMData INFO Attempt 1 of 36 on species InChI=1S/CH2O2/c1-3-2/h1H2/u1,2 succeeded.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2.symm
symmetry.py:188 parse INFO Point group: Cs
CanTherm execution initiated at Mon Jul 31 15:03:08 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species WTFNSXYULBQCQV-UHFFFAOYSA-u2...
Loading species TUJKJAMUKRIRHC-UHFFFAOYSA-u1...
Loading species XLYOFNOQVPJJNP-UHFFFAOYSA...
Loading species SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2...
Loading transition state TS...
Loading reaction CO[O]+[OH]_O+[CH2]O[O]...


Loading statistical mechanics parameters for WTFNSXYULBQCQV-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for WTFNSXYULBQCQV-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for TUJKJAMUKRIRHC-UHFFFAOYSA-u1...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TUJKJAMUKRIRHC-UHFFFAOYSA-u1...
Loading statistical mechanics parameters for XLYOFNOQVPJJNP-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for XLYOFNOQVPJJNP-UHFFFAOYSA...
Loading statistical mechanics parameters for SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for WTFNSXYULBQCQV-UHFFFAOYSA-u2 + TUJKJAMUKRIRHC-UHFFFAOYSA-u1 <=> XLYOFNOQVPJJNP-UHFFFAOYSA + SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2...

CanTherm execution terminated at Mon Jul 31 15:03:09 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/CO[O]+[OH]_O+[CH2]O[O].kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='CO[O]+[OH]_O+[CH2]O[O]', reactants=[Species(label="WTFNSXYULBQCQV-UHFFFAOYSA-u2", conformer=Conformer(E0=(-1.50004,'kJ/mol'), modes=[IdealGasTranslation(mass=(47.0133,'amu')), NonlinearRotor(inertia=([9.39241,43.6626,49.8308],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([110.146,504.477,966.16,1126.1,1181.65,1282.22,1435.79,1453.82,1468.51,3023.12,3121.23,3122.51],'cm^-1'))], spinMultiplicity=2)), Species(label="TUJKJAMUKRIRHC-UHFFFAOYSA-u1", conformer=Conformer(E0=(33.3551,'kJ/mol'), modes=[IdealGasTranslation(mass=(17.0027,'amu')), LinearRotor(inertia=(0.893734,'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([3697.83],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="XLYOFNOQVPJJNP-UHFFFAOYSA", conformer=Conformer(E0=(-239.887,'kJ/mol'), modes=[IdealGasTranslation(mass=(18.0106,'amu')), NonlinearRotor(inertia=([0.605854,1.16901,1.77486],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1597.12,3820.57,3923.23],'cm^-1'))])), Species(label="SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2", conformer=Conformer(E0=(216.916,'kJ/mol'), modes=[IdealGasTranslation(mass=(46.0055,'amu')), NonlinearRotor(inertia=([8.5814,40.5468,45.47],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([255.354,404.384,617.067,1079.61,1106.05,1130.87,1433.34,3131.02,3280.64],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(1.34801,'cm^3/(mol*s)'), n=3.63231, Ea=(-1.98629,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.16998, dn = +|- 0.0206031, dEa = +|- 0.113338 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(46.232,'kJ/mol'), modes=[IdealGasTranslation(mass=(64.016,'amu')), NonlinearRotor(inertia=([43.8304,98.0743,138.554],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([73.481,185.463,284.491,362.893,478.097,689.906,809.035,974.098,1075.15,1165.33,1217.02,1291.96,1439.62,1447.58,3048.65,3140.09,3699.19],'cm^-1'))], spinMultiplicity=3), frequency=(-1656.16,'cm^-1'), tunneling=Eckart(frequency=(-1656.16,'cm^-1'), E0_reac=(31.855,'kJ/mol'), E0_TS=(46.232,'kJ/mol'), E0_prod=(-22.971,'kJ/mol'))))
For reaction Reaction(label='CO[O]+[OH]_O+[CH2]O[O]', reactants=[Species(label="WTFNSXYULBQCQV-UHFFFAOYSA-u2", conformer=Conformer(E0=(-1.50004,'kJ/mol'), modes=[IdealGasTranslation(mass=(47.0133,'amu')), NonlinearRotor(inertia=([9.39241,43.6626,49.8308],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([110.146,504.477,966.16,1126.1,1181.65,1282.22,1435.79,1453.82,1468.51,3023.12,3121.23,3122.51],'cm^-1'))], spinMultiplicity=2)), Species(label="TUJKJAMUKRIRHC-UHFFFAOYSA-u1", conformer=Conformer(E0=(33.3551,'kJ/mol'), modes=[IdealGasTranslation(mass=(17.0027,'amu')), LinearRotor(inertia=(0.893734,'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([3697.83],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="XLYOFNOQVPJJNP-UHFFFAOYSA", conformer=Conformer(E0=(-239.887,'kJ/mol'), modes=[IdealGasTranslation(mass=(18.0106,'amu')), NonlinearRotor(inertia=([0.605854,1.16901,1.77486],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1597.12,3820.57,3923.23],'cm^-1'))])), Species(label="SBHHFAIXPSFQLT-UHFFFAOYSA-u1,2", conformer=Conformer(E0=(216.916,'kJ/mol'), modes=[IdealGasTranslation(mass=(46.0055,'amu')), NonlinearRotor(inertia=([8.5814,40.5468,45.47],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([255.354,404.384,617.067,1079.61,1106.05,1130.87,1433.34,3131.02,3280.64],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(1.34801,'cm^3/(mol*s)'), n=3.63231, Ea=(-1.98629,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.16998, dn = +|- 0.0206031, dEa = +|- 0.113338 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(46.232,'kJ/mol'), modes=[IdealGasTranslation(mass=(64.016,'amu')), NonlinearRotor(inertia=([43.8304,98.0743,138.554],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([73.481,185.463,284.491,362.893,478.097,689.906,809.035,974.098,1075.15,1165.33,1217.02,1291.96,1439.62,1447.58,3048.65,3140.09,3699.19],'cm^-1'))], spinMultiplicity=3), frequency=(-1656.16,'cm^-1'), tunneling=Eckart(frequency=(-1656.16,'cm^-1'), E0_reac=(31.855,'kJ/mol'), E0_TS=(46.232,'kJ/mol'), E0_prod=(-22.971,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(1.34801,'cm^3/(mol*s)'), n=3.63231, Ea=(-1.98629,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.16998, dn = +|- 0.0206031, dEa = +|- 0.113338 kJ/mol""")

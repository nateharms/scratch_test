comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 143
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="C[CH]O"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C]O")], pairs=[[Molecule(SMILES="C[CH]O"), Molecule(SMILES="C[C]O")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="C[CH]O"), Molecule(SMILES="[O]O")]
[Molecule(SMILES="OO"), Molecule(SMILES="C[C]O")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="C[CH]O"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C]O")], pairs=[[Molecule(SMILES="C[CH]O"), Molecule(SMILES="C[C]O")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "C[CH]O"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[C]O">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="C[CH]O"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C]O")], pairs=[[Molecule(SMILES="C[CH]O"), Molecule(SMILES="C[C]O")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "C[CH]O"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[C]O">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]O+[O]O_C[C]O+OO.kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for C[CH]O.[O]O
reaction.py:338 bmPreEdit INFO Changing lower limit 2.9 to 2.388448
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.25751459416
reaction.py:338 bmPreEdit INFO Changing lower limit 2.507837 to 2.445889
reaction.py:338 bmPreEdit INFO Changing lower limit 3.4 to 3.15328354181
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]O+[O]O_C[C]O+OOEst.gjf
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]O+[O]O_C[C]O+OORxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]O+[O]O_C[C]O+OO.log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]O+[O]O_C[C]O+OOIRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]O+[O]O_C[C]O+OOIRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]O+[O]O_C[C]O+OO.ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/C[CH]O+[O]O_C[C]O+OO.log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/GAWIXWVDTYZWAW-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/GAWIXWVDTYZWAW-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: C1
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/JVKQHDUTAFISFX-UHFFFAOYSA-u2,2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/JVKQHDUTAFISFX-UHFFFAOYSA-u2,2.symm
symmetry.py:188 parse INFO Point group: C1
CanTherm execution initiated at Tue Aug  1 14:44:45 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species GAWIXWVDTYZWAW-UHFFFAOYSA-u2...
Loading species OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading species MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading species JVKQHDUTAFISFX-UHFFFAOYSA-u2,2...
Loading transition state TS...
Loading reaction C[CH]O+[O]O_C[C]O+OO...


Loading statistical mechanics parameters for GAWIXWVDTYZWAW-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for GAWIXWVDTYZWAW-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading statistical mechanics parameters for JVKQHDUTAFISFX-UHFFFAOYSA-u2,2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for JVKQHDUTAFISFX-UHFFFAOYSA-u2,2...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2 + GAWIXWVDTYZWAW-UHFFFAOYSA-u2 <=> MHAJPDPJQMAIIY-UHFFFAOYSA + JVKQHDUTAFISFX-UHFFFAOYSA-u2,2...

CanTherm execution terminated at Tue Aug  1 14:44:46 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]O+[O]O_C[C]O+OO.kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='C[CH]O+[O]O_C[C]O+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="GAWIXWVDTYZWAW-UHFFFAOYSA-u2", conformer=Conformer(E0=(-69.7457,'kJ/mol'), modes=[IdealGasTranslation(mass=(45.034,'amu')), NonlinearRotor(inertia=([10.8938,53.0104,60.447],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([168.271,354.232,403.333,551.258,925.474,1009.34,1046.4,1206.05,1260.51,1372.5,1436.1,1443.47,1472.59,2956.07,3022.84,3076.86,3100.56,3854.81],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="JVKQHDUTAFISFX-UHFFFAOYSA-u2,2", conformer=Conformer(E0=(151.268,'kJ/mol'), modes=[IdealGasTranslation(mass=(44.0262,'amu')), NonlinearRotor(inertia=([7.51324,56.8183,59.7557],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([177.375,304.612,396.713,898.48,993.645,1074.62,1160.65,1346.83,1374.96,1444.24,1451.65,2945.13,2996.45,3088.75,3720.75],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(0.774101,'cm^3/(mol*s)'), n=3.70678, Ea=(75.4684,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.04221, dn = +|- 0.00542579, dEa = +|- 0.0298473 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(17.9946,'kJ/mol'), modes=[IdealGasTranslation(mass=(78.0317,'amu')), NonlinearRotor(inertia=([66.8097,205.331,261.647],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([63.4137,94.8032,151.938,186.617,210.813,237.772,349.857,404.084,555.148,854.334,924.969,1007.82,1043.17,1065.05,1243.16,1338.84,1373.06,1402.27,1443.19,1454.99,1486.18,2964.06,3021.03,3078.53,3759.65,3823.96],'cm^-1'))], spinMultiplicity=3), frequency=(-1734.26,'cm^-1'), tunneling=Eckart(frequency=(-1734.26,'cm^-1'), E0_reac=(-63.5502,'kJ/mol'), E0_TS=(17.9946,'kJ/mol'), E0_prod=(16.886,'kJ/mol'))))
For reaction Reaction(label='C[CH]O+[O]O_C[C]O+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="GAWIXWVDTYZWAW-UHFFFAOYSA-u2", conformer=Conformer(E0=(-69.7457,'kJ/mol'), modes=[IdealGasTranslation(mass=(45.034,'amu')), NonlinearRotor(inertia=([10.8938,53.0104,60.447],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([168.271,354.232,403.333,551.258,925.474,1009.34,1046.4,1206.05,1260.51,1372.5,1436.1,1443.47,1472.59,2956.07,3022.84,3076.86,3100.56,3854.81],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="JVKQHDUTAFISFX-UHFFFAOYSA-u2,2", conformer=Conformer(E0=(151.268,'kJ/mol'), modes=[IdealGasTranslation(mass=(44.0262,'amu')), NonlinearRotor(inertia=([7.51324,56.8183,59.7557],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([177.375,304.612,396.713,898.48,993.645,1074.62,1160.65,1346.83,1374.96,1444.24,1451.65,2945.13,2996.45,3088.75,3720.75],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(0.774101,'cm^3/(mol*s)'), n=3.70678, Ea=(75.4684,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.04221, dn = +|- 0.00542579, dEa = +|- 0.0298473 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(17.9946,'kJ/mol'), modes=[IdealGasTranslation(mass=(78.0317,'amu')), NonlinearRotor(inertia=([66.8097,205.331,261.647],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([63.4137,94.8032,151.938,186.617,210.813,237.772,349.857,404.084,555.148,854.334,924.969,1007.82,1043.17,1065.05,1243.16,1338.84,1373.06,1402.27,1443.19,1454.99,1486.18,2964.06,3021.03,3078.53,3759.65,3823.96],'cm^-1'))], spinMultiplicity=3), frequency=(-1734.26,'cm^-1'), tunneling=Eckart(frequency=(-1734.26,'cm^-1'), E0_reac=(-63.5502,'kJ/mol'), E0_TS=(17.9946,'kJ/mol'), E0_prod=(16.886,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(0.774101,'cm^3/(mol*s)'), n=3.70678, Ea=(75.4684,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.04221, dn = +|- 0.00542579, dEa = +|- 0.0298473 kJ/mol""")

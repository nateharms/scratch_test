comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 30
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="[O]O"), Molecule(SMILES="C=C")], products=[Molecule(SMILES="OO"), Molecule(SMILES="[CH]=C")], degeneracy=4, pairs=[[Molecule(SMILES="[O]O"), Molecule(SMILES="OO")], [Molecule(SMILES="C=C"), Molecule(SMILES="[CH]=C")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="[O]O"), Molecule(SMILES="C=C")]
[Molecule(SMILES="OO"), Molecule(SMILES="[CH]=C")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="[O]O"), Molecule(SMILES="C=C")], products=[Molecule(SMILES="OO"), Molecule(SMILES="[CH]=C")], degeneracy=4, pairs=[[Molecule(SMILES="[O]O"), Molecule(SMILES="OO")], [Molecule(SMILES="C=C"), Molecule(SMILES="[CH]=C")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "[O]O"> + <Molecule "C=C"> <=> <Molecule "OO"> + <Molecule "[CH]=C">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="[O]O"), Molecule(SMILES="C=C")], products=[Molecule(SMILES="OO"), Molecule(SMILES="[CH]=C")], degeneracy=4, pairs=[[Molecule(SMILES="[O]O"), Molecule(SMILES="OO")], [Molecule(SMILES="C=C"), Molecule(SMILES="[CH]=C")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "[O]O"> + <Molecule "C=C"> <=> <Molecule "OO"> + <Molecule "[CH]=C">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:96 loadKineticsDataFile INFO Reading existing kinetics file /gss_gpfs_scratch/harms.n/QMfiles/C=C+[O]O_OO+[CH]=C.kinetics
comparerTST.py:125 calculate INFO Removing 'core*' files
comparerTST.py:133 calculate INFO Yay, reaction kinetics calculated!!!
comparerTST.py:134 calculate INFO Reaction(label='C=C+[O]O_OO+[CH]=C', reactants=[Species(label="VGGSQFUCUMXWEO-UHFFFAOYSA", conformer=Conformer(E0=(49.4285,'kJ/mol'), modes=[IdealGasTranslation(mass=(28.0313,'amu')), NonlinearRotor(inertia=([3.42657,16.5615,19.9881],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([814.946,970.992,985.919,1047.53,1220.05,1360.89,1447.18,1679.65,3081.9,3096.74,3156.67,3181.76],'cm^-1'))])), Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="ORGHESHFQPYLAO-UHFFFAOYSA-u1", conformer=Conformer(E0=(288.426,'kJ/mol'), modes=[IdealGasTranslation(mass=(27.0235,'amu')), NonlinearRotor(inertia=([2.15927,15.3067,17.466],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([718.525,848.546,941.555,1047.15,1375.08,1643.51,3037.72,3125.54,3189.67],'cm^-1'))], spinMultiplicity=2)), Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))]))], kinetics=Arrhenius(A=(0.265705,'cm^3/(mol*s)'), n=3.96021, Ea=(92.4156,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.08257, dn = +|- 0.0104122, dEa = +|- 0.0572774 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(156.753,'kJ/mol'), modes=[IdealGasTranslation(mass=(61.029,'amu')), NonlinearRotor(inertia=([22.1597,173.09,181.344],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([59.7963,120.398,167.629,361.481,415.571,614.658,773.926,864.879,949.738,959.43,1064.14,1173.53,1376.84,1395.94,1416.98,1653.12,3052.6,3130.85,3149.7,3756.1],'cm^-1'))], spinMultiplicity=2), frequency=(-1627.61,'cm^-1'), tunneling=Eckart(frequency=(-1627.61,'cm^-1'), E0_reac=(55.624,'kJ/mol'), E0_TS=(156.753,'kJ/mol'), E0_prod=(154.044,'kJ/mol'))))
comparerTST.py:214 performCalcs INFO For reaction Reaction(label='C=C+[O]O_OO+[CH]=C', reactants=[Species(label="VGGSQFUCUMXWEO-UHFFFAOYSA", conformer=Conformer(E0=(49.4285,'kJ/mol'), modes=[IdealGasTranslation(mass=(28.0313,'amu')), NonlinearRotor(inertia=([3.42657,16.5615,19.9881],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([814.946,970.992,985.919,1047.53,1220.05,1360.89,1447.18,1679.65,3081.9,3096.74,3156.67,3181.76],'cm^-1'))])), Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="ORGHESHFQPYLAO-UHFFFAOYSA-u1", conformer=Conformer(E0=(288.426,'kJ/mol'), modes=[IdealGasTranslation(mass=(27.0235,'amu')), NonlinearRotor(inertia=([2.15927,15.3067,17.466],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([718.525,848.546,941.555,1047.15,1375.08,1643.51,3037.72,3125.54,3189.67],'cm^-1'))], spinMultiplicity=2)), Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))]))], kinetics=Arrhenius(A=(0.265705,'cm^3/(mol*s)'), n=3.96021, Ea=(92.4156,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.08257, dn = +|- 0.0104122, dEa = +|- 0.0572774 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(156.753,'kJ/mol'), modes=[IdealGasTranslation(mass=(61.029,'amu')), NonlinearRotor(inertia=([22.1597,173.09,181.344],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([59.7963,120.398,167.629,361.481,415.571,614.658,773.926,864.879,949.738,959.43,1064.14,1173.53,1376.84,1395.94,1416.98,1653.12,3052.6,3130.85,3149.7,3756.1],'cm^-1'))], spinMultiplicity=2), frequency=(-1627.61,'cm^-1'), tunneling=Eckart(frequency=(-1627.61,'cm^-1'), E0_reac=(55.624,'kJ/mol'), E0_TS=(156.753,'kJ/mol'), E0_prod=(154.044,'kJ/mol'))))
comparerTST.py:216 performCalcs INFO We have calculated kinetics Arrhenius(A=(0.265705,'cm^3/(mol*s)'), n=3.96021, Ea=(92.4156,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.08257, dn = +|- 0.0104122, dEa = +|- 0.0572774 kJ/mol""")

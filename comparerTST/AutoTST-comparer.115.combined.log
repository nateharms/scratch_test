comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 115
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="C[CH]C"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C]C")], pairs=[[Molecule(SMILES="C[CH]C"), Molecule(SMILES="C[C]C")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="C[CH]C"), Molecule(SMILES="[O]O")]
[Molecule(SMILES="OO"), Molecule(SMILES="C[C]C")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="C[CH]C"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C]C")], pairs=[[Molecule(SMILES="C[CH]C"), Molecule(SMILES="C[C]C")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "C[CH]C"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[C]C">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="C[CH]C"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C]C")], pairs=[[Molecule(SMILES="C[CH]C"), Molecule(SMILES="C[C]C")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "C[CH]C"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[C]C">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]C+[O]O_C[C]C+OO.kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for C[CH]C.[O]O
reaction.py:338 bmPreEdit INFO Changing lower limit 2.9 to 2.388448
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.25751459416
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.25751459416
reaction.py:338 bmPreEdit INFO Changing lower limit 2.507837 to 2.445889
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]C+[O]O_C[C]C+OOEst.gjf
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]C+[O]O_C[C]C+OORxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]C+[O]O_C[C]C+OO.log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]C+[O]O_C[C]C+OOIRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]C+[O]O_C[C]C+OOIRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]C+[O]O_C[C]C+OO.ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/C[CH]C+[O]O_C[C]C+OO.log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/HNUALPPJLMYHDK-UHFFFAOYSA-u3.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/HNUALPPJLMYHDK-UHFFFAOYSA-u3.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2
gaussian.py:111 verifyOutputFile INFO Output file /gss_gpfs_scratch/harms.n/QMscratch/IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3.log does not exist.
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:275 generateQMData INFO Trying GaussianMolM062X attempt 1 of 36 on molecule C[C]C.
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3.log
gaussian.py:278 generateQMData INFO Attempt 1 of 36 on species InChI=1S/C3H6/c1-3-2/h1-2H3/u3,3 succeeded.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3.symm
symmetry.py:188 parse INFO Point group: C2v
CanTherm execution initiated at Tue Aug  1 10:48:43 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species HNUALPPJLMYHDK-UHFFFAOYSA-u3...
Loading species OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading species MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading species IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3...
Loading transition state TS...
Loading reaction C[CH]C+[O]O_C[C]C+OO...


Loading statistical mechanics parameters for HNUALPPJLMYHDK-UHFFFAOYSA-u3...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for HNUALPPJLMYHDK-UHFFFAOYSA-u3...
Loading statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading statistical mechanics parameters for IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for HNUALPPJLMYHDK-UHFFFAOYSA-u3 + OUUQCZGPVNCOIJ-UHFFFAOYSA-u2 <=> MHAJPDPJQMAIIY-UHFFFAOYSA + IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3...

CanTherm execution terminated at Tue Aug  1 10:48:44 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]C+[O]O_C[C]C+OO.kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='C[CH]C+[O]O_C[C]C+OO', reactants=[Species(label="HNUALPPJLMYHDK-UHFFFAOYSA-u3", conformer=Conformer(E0=(77.5032,'kJ/mol'), modes=[IdealGasTranslation(mass=(43.0548,'amu')), NonlinearRotor(inertia=([13.5908,59.7417,67.072],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([109.17,115.306,314.489,373.22,885.54,921.352,931.474,1009.25,1135.77,1163.09,1343.85,1391.09,1395.74,1444.46,1456,1460.86,1473.82,2942.52,2945.39,2990.17,2991.65,3063.21,3064.14,3146.14],'cm^-1'))], spinMultiplicity=2)), Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3", conformer=Conformer(E0=(288.826,'kJ/mol'), modes=[IdealGasTranslation(mass=(42.047,'amu')), NonlinearRotor(inertia=([9.28131,64.554,67.5442],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([32.3723,282.56,834.2,907.769,916.888,1026.54,1099.95,1285.78,1364.67,1371.77,1426.96,1432.81,1438.56,1444.52,2918.6,2923.11,2961.59,2963.9,3029.62,3030.53],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(0.57768,'cm^3/(mol*s)'), n=3.65579, Ea=(64.9731,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.03905, dn = +|- 0.00502764, dEa = +|- 0.0276571 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(156.494,'kJ/mol'), modes=[IdealGasTranslation(mass=(76.0524,'amu')), NonlinearRotor(inertia=([71.3254,207.271,264.578],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([50.8347,80.5929,109.416,123.087,171.397,213.01,303.732,418.062,548.125,802.503,876.851,931.351,936.183,1028.19,1070.65,1156.62,1258.38,1367.18,1379.81,1405.31,1425.71,1435.02,1439.77,1447.96,1456.49,2938.22,2945.51,2987.97,2990.03,3046.75,3054.59,3743.69],'cm^-1'))], spinMultiplicity=3), frequency=(-1728.46,'cm^-1'), tunneling=Eckart(frequency=(-1728.46,'cm^-1'), E0_reac=(83.6987,'kJ/mol'), E0_TS=(156.494,'kJ/mol'), E0_prod=(154.444,'kJ/mol'))))
For reaction Reaction(label='C[CH]C+[O]O_C[C]C+OO', reactants=[Species(label="HNUALPPJLMYHDK-UHFFFAOYSA-u3", conformer=Conformer(E0=(77.5032,'kJ/mol'), modes=[IdealGasTranslation(mass=(43.0548,'amu')), NonlinearRotor(inertia=([13.5908,59.7417,67.072],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([109.17,115.306,314.489,373.22,885.54,921.352,931.474,1009.25,1135.77,1163.09,1343.85,1391.09,1395.74,1444.46,1456,1460.86,1473.82,2942.52,2945.39,2990.17,2991.65,3063.21,3064.14,3146.14],'cm^-1'))], spinMultiplicity=2)), Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="IPZJQDSFZGZEOY-UHFFFAOYSA-u3,3", conformer=Conformer(E0=(288.826,'kJ/mol'), modes=[IdealGasTranslation(mass=(42.047,'amu')), NonlinearRotor(inertia=([9.28131,64.554,67.5442],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([32.3723,282.56,834.2,907.769,916.888,1026.54,1099.95,1285.78,1364.67,1371.77,1426.96,1432.81,1438.56,1444.52,2918.6,2923.11,2961.59,2963.9,3029.62,3030.53],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(0.57768,'cm^3/(mol*s)'), n=3.65579, Ea=(64.9731,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.03905, dn = +|- 0.00502764, dEa = +|- 0.0276571 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(156.494,'kJ/mol'), modes=[IdealGasTranslation(mass=(76.0524,'amu')), NonlinearRotor(inertia=([71.3254,207.271,264.578],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([50.8347,80.5929,109.416,123.087,171.397,213.01,303.732,418.062,548.125,802.503,876.851,931.351,936.183,1028.19,1070.65,1156.62,1258.38,1367.18,1379.81,1405.31,1425.71,1435.02,1439.77,1447.96,1456.49,2938.22,2945.51,2987.97,2990.03,3046.75,3054.59,3743.69],'cm^-1'))], spinMultiplicity=3), frequency=(-1728.46,'cm^-1'), tunneling=Eckart(frequency=(-1728.46,'cm^-1'), E0_reac=(83.6987,'kJ/mol'), E0_TS=(156.494,'kJ/mol'), E0_prod=(154.444,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(0.57768,'cm^3/(mol*s)'), n=3.65579, Ea=(64.9731,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.03905, dn = +|- 0.00502764, dEa = +|- 0.0276571 kJ/mol""")

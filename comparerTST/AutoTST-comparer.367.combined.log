comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 367
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C](C)C[O]")], pairs=[[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="C[C](C)C[O]")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="[O]O")]
[Molecule(SMILES="OO"), Molecule(SMILES="C[C](C)C[O]")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C](C)C[O]")], pairs=[[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="C[C](C)C[O]")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "CC(C)C[O]"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[C](C)C[O]">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[C](C)C[O]")], pairs=[[Molecule(SMILES="CC(C)C[O]"), Molecule(SMILES="C[C](C)C[O]")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "CC(C)C[O]"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[C](C)C[O]">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/CC(C)C[O]+[O]O_C[C](C)C[O]+OO.kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for CC(C)C[O].[O]O
reaction.py:338 bmPreEdit INFO Changing lower limit 2.9 to 2.441688
reaction.py:338 bmPreEdit INFO Changing lower limit 2.512458 to 2.449531
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.31075459416
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.31075459416
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.31075459416
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CC(C)C[O]+[O]O_C[C](C)C[O]+OOEst.gjf
Error: segmentation violation
   rax 0000000000000000, rbx ffffffffffffffff, rcx ffffffffffffffff
   rdx 0000000000003257, rsp 00007ffffeeb63d8, rbp 00007ffffeeb69b0
   rsi 000000000000000b, rdi 0000000000003257, r8  00002b4f229166c0
   r9  0000000000000000, r10 00007ffffeeb6160, r11 0000000000000206
   r12 0000000000000000, r13 0000000000000000, r14 00007ffffeeb69f8
   r15 0000000000000000
  --- traceback not available
gaussian.py:680 runAlt WARNING Gaussian finished with return code 1
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CC(C)C[O]+[O]O_C[C](C)C[O]+OORxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/CC(C)C[O]+[O]O_C[C](C)C[O]+OO.log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CC(C)C[O]+[O]O_C[C](C)C[O]+OOIRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/CC(C)C[O]+[O]O_C[C](C)C[O]+OOIRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/CC(C)C[O]+[O]O_C[C](C)C[O]+OO.ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/CC(C)C[O]+[O]O_C[C](C)C[O]+OO.log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/PBRXKNKPUMMYPO-UHFFFAOYSA-u5.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/PBRXKNKPUMMYPO-UHFFFAOYSA-u5.symm
symmetry.py:188 parse INFO Point group: C1
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/VGURINJAWRYNHV-UHFFFAOYSA-u4,5.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/VGURINJAWRYNHV-UHFFFAOYSA-u4,5.symm
symmetry.py:188 parse INFO Point group: C1
CanTherm execution initiated at Tue Aug  8 01:54:39 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species PBRXKNKPUMMYPO-UHFFFAOYSA-u5...
Loading species OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading species MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading species VGURINJAWRYNHV-UHFFFAOYSA-u4,5...
Loading transition state TS...
Loading reaction CC(C)C[O]+[O]O_C[C](C)C[O]+OO...


Loading statistical mechanics parameters for PBRXKNKPUMMYPO-UHFFFAOYSA-u5...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for PBRXKNKPUMMYPO-UHFFFAOYSA-u5...
Loading statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading statistical mechanics parameters for VGURINJAWRYNHV-UHFFFAOYSA-u4,5...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for VGURINJAWRYNHV-UHFFFAOYSA-u4,5...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2 + PBRXKNKPUMMYPO-UHFFFAOYSA-u5 <=> MHAJPDPJQMAIIY-UHFFFAOYSA + VGURINJAWRYNHV-UHFFFAOYSA-u4,5...

CanTherm execution terminated at Tue Aug  8 01:54:41 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/CC(C)C[O]+[O]O_C[C](C)C[O]+OO.kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='CC(C)C[O]+[O]O_C[C](C)C[O]+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="PBRXKNKPUMMYPO-UHFFFAOYSA-u5", conformer=Conformer(E0=(-82.38,'kJ/mol'), modes=[IdealGasTranslation(mass=(73.0653,'amu')), NonlinearRotor(inertia=([65.34,136.707,183.168],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([124.855,222.368,236.694,266.957,340.397,398.453,492.226,517.507,824.337,918.076,929.617,960.488,1005.15,1061.62,1134.82,1181.5,1209.84,1292.97,1339.8,1347.84,1359.66,1383.08,1401.64,1466.36,1471.02,1482.47,1488.83,2872.19,2934.03,2986.09,2987.13,2998.13,3051.91,3058.85,3070.95,3084.7],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="VGURINJAWRYNHV-UHFFFAOYSA-u4,5", conformer=Conformer(E0=(100.913,'kJ/mol'), modes=[IdealGasTranslation(mass=(72.0575,'amu')), NonlinearRotor(inertia=([65.5489,134.164,184.499],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([80.5383,112.331,145.392,228.838,288.443,347.987,491.489,774.424,817.375,927.181,960.256,977.688,1008.57,1063.67,1140.57,1212.24,1279.81,1338.43,1357.88,1385.61,1391.86,1450.68,1453.15,1463.38,1473.43,2759.72,2929.05,2935.61,2959.05,3010.86,3014.73,3067.81,3081.06],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(0.0042337,'cm^3/(mol*s)'), n=4.20187, Ea=(40.4411,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.17946, dn = +|- 0.0216625, dEa = +|- 0.119165 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-22.0487,'kJ/mol'), modes=[IdealGasTranslation(mass=(106.063,'amu')), NonlinearRotor(inertia=([180.77,267.64,322.172],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([75.3716,106.7,121.893,137.072,162.128,195.865,220.027,261.62,319.471,342.704,479.954,486.404,535.58,585.998,825.996,924.928,943.316,972.896,1018.37,1048.74,1072.18,1119.22,1179.62,1229.91,1265.33,1324.73,1350.66,1372.98,1391.27,1434.31,1444.8,1450.5,1456.34,1467.98,1475.87,2874.04,2920.63,2952.28,2969.43,3039.82,3040.52,3076.34,3077.6,3702.45],'cm^-1'))], spinMultiplicity=3), frequency=(-1839.34,'cm^-1'), tunneling=Eckart(frequency=(-1839.34,'cm^-1'), E0_reac=(-76.1845,'kJ/mol'), E0_TS=(-22.0487,'kJ/mol'), E0_prod=(-33.4688,'kJ/mol'))))
For reaction Reaction(label='CC(C)C[O]+[O]O_C[C](C)C[O]+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="PBRXKNKPUMMYPO-UHFFFAOYSA-u5", conformer=Conformer(E0=(-82.38,'kJ/mol'), modes=[IdealGasTranslation(mass=(73.0653,'amu')), NonlinearRotor(inertia=([65.34,136.707,183.168],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([124.855,222.368,236.694,266.957,340.397,398.453,492.226,517.507,824.337,918.076,929.617,960.488,1005.15,1061.62,1134.82,1181.5,1209.84,1292.97,1339.8,1347.84,1359.66,1383.08,1401.64,1466.36,1471.02,1482.47,1488.83,2872.19,2934.03,2986.09,2987.13,2998.13,3051.91,3058.85,3070.95,3084.7],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="VGURINJAWRYNHV-UHFFFAOYSA-u4,5", conformer=Conformer(E0=(100.913,'kJ/mol'), modes=[IdealGasTranslation(mass=(72.0575,'amu')), NonlinearRotor(inertia=([65.5489,134.164,184.499],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([80.5383,112.331,145.392,228.838,288.443,347.987,491.489,774.424,817.375,927.181,960.256,977.688,1008.57,1063.67,1140.57,1212.24,1279.81,1338.43,1357.88,1385.61,1391.86,1450.68,1453.15,1463.38,1473.43,2759.72,2929.05,2935.61,2959.05,3010.86,3014.73,3067.81,3081.06],'cm^-1'))], spinMultiplicity=3))], kinetics=Arrhenius(A=(0.0042337,'cm^3/(mol*s)'), n=4.20187, Ea=(40.4411,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.17946, dn = +|- 0.0216625, dEa = +|- 0.119165 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-22.0487,'kJ/mol'), modes=[IdealGasTranslation(mass=(106.063,'amu')), NonlinearRotor(inertia=([180.77,267.64,322.172],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([75.3716,106.7,121.893,137.072,162.128,195.865,220.027,261.62,319.471,342.704,479.954,486.404,535.58,585.998,825.996,924.928,943.316,972.896,1018.37,1048.74,1072.18,1119.22,1179.62,1229.91,1265.33,1324.73,1350.66,1372.98,1391.27,1434.31,1444.8,1450.5,1456.34,1467.98,1475.87,2874.04,2920.63,2952.28,2969.43,3039.82,3040.52,3076.34,3077.6,3702.45],'cm^-1'))], spinMultiplicity=3), frequency=(-1839.34,'cm^-1'), tunneling=Eckart(frequency=(-1839.34,'cm^-1'), E0_reac=(-76.1845,'kJ/mol'), E0_TS=(-22.0487,'kJ/mol'), E0_prod=(-33.4688,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(0.0042337,'cm^3/(mol*s)'), n=4.20187, Ea=(40.4411,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.17946, dn = +|- 0.0216625, dEa = +|- 0.119165 kJ/mol""")

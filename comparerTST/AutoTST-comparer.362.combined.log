comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 362
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C[CH]O")], degeneracy=2, pairs=[[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="C[CH]C[CH]O")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="[O]O")]
[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C[CH]O")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C[CH]O")], degeneracy=2, pairs=[[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="C[CH]C[CH]O")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "C[CH]CCO"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[CH]C[CH]O">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C[CH]O")], degeneracy=2, pairs=[[Molecule(SMILES="C[CH]CCO"), Molecule(SMILES="C[CH]C[CH]O")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "C[CH]CCO"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[CH]C[CH]O">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]CCO+[O]O_C[CH]C[CH]O+OO.kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for C[CH]CCO.[O]O
reaction.py:338 bmPreEdit INFO Changing lower limit 2.9 to 2.45519
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.32425659416
reaction.py:338 bmPreEdit INFO Changing lower limit 2.518636 to 2.478503
reaction.py:338 bmPreEdit INFO Changing lower limit 3.4 to 3.22002554181
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]CCO+[O]O_C[CH]C[CH]O+OOEst.gjf
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]CCO+[O]O_C[CH]C[CH]O+OORxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]CCO+[O]O_C[CH]C[CH]O+OO.log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]CCO+[O]O_C[CH]C[CH]O+OOIRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/C[CH]CCO+[O]O_C[CH]C[CH]O+OOIRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]CCO+[O]O_C[CH]C[CH]O+OO.ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/C[CH]CCO+[O]O_C[CH]C[CH]O+OO.log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/DBQZVPSKYUCKNT-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/DBQZVPSKYUCKNT-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: C1
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/XTAWBCWRABQSNE-UHFFFAOYSA-u2,4.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/XTAWBCWRABQSNE-UHFFFAOYSA-u2,4.symm
symmetry.py:188 parse INFO Point group: C1
CanTherm execution initiated at Mon Aug  7 13:42:34 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species DBQZVPSKYUCKNT-UHFFFAOYSA-u2...
Loading species OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading species MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading species XTAWBCWRABQSNE-UHFFFAOYSA-u2,4...
Loading transition state TS...
Loading reaction C[CH]CCO+[O]O_C[CH]C[CH]O+OO...


Loading statistical mechanics parameters for DBQZVPSKYUCKNT-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for DBQZVPSKYUCKNT-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading statistical mechanics parameters for XTAWBCWRABQSNE-UHFFFAOYSA-u2,4...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for XTAWBCWRABQSNE-UHFFFAOYSA-u2,4...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2 + DBQZVPSKYUCKNT-UHFFFAOYSA-u2 <=> XTAWBCWRABQSNE-UHFFFAOYSA-u2,4 + MHAJPDPJQMAIIY-UHFFFAOYSA...

CanTherm execution terminated at Mon Aug  7 13:42:36 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/C[CH]CCO+[O]O_C[CH]C[CH]O+OO.kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='C[CH]CCO+[O]O_C[CH]C[CH]O+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="DBQZVPSKYUCKNT-UHFFFAOYSA-u2", conformer=Conformer(E0=(-98.1286,'kJ/mol'), modes=[IdealGasTranslation(mass=(73.0653,'amu')), NonlinearRotor(inertia=([23.5085,252.633,265.039],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([71.5494,112.105,144.88,199.059,292.006,390.959,404.275,442.995,771.707,907.892,960.918,1009.17,1030.73,1086.39,1120.78,1140.57,1198.21,1225.49,1282.05,1288,1379.28,1405,1432.79,1454.6,1455.6,1468.15,1505.1,2933.66,2951.41,2964.04,2988.35,3004.27,3008.93,3073.32,3128.99,3857.08],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="XTAWBCWRABQSNE-UHFFFAOYSA-u2,4", conformer=Conformer(E0=(74.6842,'kJ/mol'), modes=[IdealGasTranslation(mass=(72.0575,'amu')), NonlinearRotor(inertia=([20.0437,250.922,261.956],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([64.7856,82.934,124.753,209.27,380.892,395.778,416.881,444.469,582.258,867.664,906.015,977.319,1031.44,1090.92,1124.92,1146.83,1199.14,1227.94,1287.57,1373.3,1398.3,1428.59,1447.73,1453.22,1463.76,2891.37,2901.56,2931.55,3007.32,3064.03,3124.26,3133.92,3856.4],'cm^-1'))], spinMultiplicity=3)), Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))]))], kinetics=Arrhenius(A=(0.00381291,'cm^3/(mol*s)'), n=4.10983, Ea=(29.8187,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.17374, dn = +|- 0.0210245, dEa = +|- 0.115656 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-47.4757,'kJ/mol'), modes=[IdealGasTranslation(mass=(106.063,'amu')), NonlinearRotor(inertia=([105.319,474.855,514.821],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([54.0221,69.0992,97.5811,121.824,131.373,184.788,218.191,280.205,304.1,359.44,419.154,468.487,505.535,656.62,848.683,869.002,971.92,985.557,1020.33,1071.91,1103.14,1133.51,1142.38,1181.87,1222.69,1279.12,1318.28,1375.68,1396.9,1403.09,1415.67,1437.71,1458.09,1466.6,1527,2906.94,2952.32,3000.07,3005.6,3077.51,3088.96,3149.98,3744.17,3769.79],'cm^-1'))], spinMultiplicity=3), frequency=(-1674.7,'cm^-1'), tunneling=Eckart(frequency=(-1674.7,'cm^-1'), E0_reac=(-91.9331,'kJ/mol'), E0_TS=(-47.4757,'kJ/mol'), E0_prod=(-59.6976,'kJ/mol'))))
For reaction Reaction(label='C[CH]CCO+[O]O_C[CH]C[CH]O+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="DBQZVPSKYUCKNT-UHFFFAOYSA-u2", conformer=Conformer(E0=(-98.1286,'kJ/mol'), modes=[IdealGasTranslation(mass=(73.0653,'amu')), NonlinearRotor(inertia=([23.5085,252.633,265.039],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([71.5494,112.105,144.88,199.059,292.006,390.959,404.275,442.995,771.707,907.892,960.918,1009.17,1030.73,1086.39,1120.78,1140.57,1198.21,1225.49,1282.05,1288,1379.28,1405,1432.79,1454.6,1455.6,1468.15,1505.1,2933.66,2951.41,2964.04,2988.35,3004.27,3008.93,3073.32,3128.99,3857.08],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="XTAWBCWRABQSNE-UHFFFAOYSA-u2,4", conformer=Conformer(E0=(74.6842,'kJ/mol'), modes=[IdealGasTranslation(mass=(72.0575,'amu')), NonlinearRotor(inertia=([20.0437,250.922,261.956],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([64.7856,82.934,124.753,209.27,380.892,395.778,416.881,444.469,582.258,867.664,906.015,977.319,1031.44,1090.92,1124.92,1146.83,1199.14,1227.94,1287.57,1373.3,1398.3,1428.59,1447.73,1453.22,1463.76,2891.37,2901.56,2931.55,3007.32,3064.03,3124.26,3133.92,3856.4],'cm^-1'))], spinMultiplicity=3)), Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))]))], kinetics=Arrhenius(A=(0.00381291,'cm^3/(mol*s)'), n=4.10983, Ea=(29.8187,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.17374, dn = +|- 0.0210245, dEa = +|- 0.115656 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-47.4757,'kJ/mol'), modes=[IdealGasTranslation(mass=(106.063,'amu')), NonlinearRotor(inertia=([105.319,474.855,514.821],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([54.0221,69.0992,97.5811,121.824,131.373,184.788,218.191,280.205,304.1,359.44,419.154,468.487,505.535,656.62,848.683,869.002,971.92,985.557,1020.33,1071.91,1103.14,1133.51,1142.38,1181.87,1222.69,1279.12,1318.28,1375.68,1396.9,1403.09,1415.67,1437.71,1458.09,1466.6,1527,2906.94,2952.32,3000.07,3005.6,3077.51,3088.96,3149.98,3744.17,3769.79],'cm^-1'))], spinMultiplicity=3), frequency=(-1674.7,'cm^-1'), tunneling=Eckart(frequency=(-1674.7,'cm^-1'), E0_reac=(-91.9331,'kJ/mol'), E0_TS=(-47.4757,'kJ/mol'), E0_prod=(-59.6976,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(0.00381291,'cm^3/(mol*s)'), n=4.10983, Ea=(29.8187,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 1.17374, dn = +|- 0.0210245, dEa = +|- 0.115656 kJ/mol""")

comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 319
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="CCC=CO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C=CO")], degeneracy=2, pairs=[[Molecule(SMILES="CCC=CO"), Molecule(SMILES="C[CH]C=CO")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="CCC=CO"), Molecule(SMILES="[O]O")]
[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C=CO")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="CCC=CO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C=CO")], degeneracy=2, pairs=[[Molecule(SMILES="CCC=CO"), Molecule(SMILES="C[CH]C=CO")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "CCC=CO"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[CH]C=CO">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="CCC=CO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="C[CH]C=CO")], degeneracy=2, pairs=[[Molecule(SMILES="CCC=CO"), Molecule(SMILES="C[CH]C=CO")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "CCC=CO"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "C[CH]C=CO">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/CCC=CO+[O]O_C[CH]C=CO+OO.kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for CCC=CO.[O]O
reaction.py:338 bmPreEdit INFO Changing lower limit 2.9 to 2.509291
reaction.py:338 bmPreEdit INFO Changing lower limit 2.545526 to 2.4914
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.37835759416
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.35391855824
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CCC=CO+[O]O_C[CH]C=CO+OOEst.gjf
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CCC=CO+[O]O_C[CH]C=CO+OORxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/CCC=CO+[O]O_C[CH]C=CO+OO.log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/CCC=CO+[O]O_C[CH]C=CO+OOIRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/CCC=CO+[O]O_C[CH]C=CO+OOIRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/CCC=CO+[O]O_C[CH]C=CO+OO.ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/CCC=CO+[O]O_C[CH]C=CO+OO.log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/SIIVGPQREKVCOP-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/SIIVGPQREKVCOP-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C1
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/GZSMAFANHDULAC-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/GZSMAFANHDULAC-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
CanTherm execution initiated at Sun Aug  6 03:09:28 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species SIIVGPQREKVCOP-UHFFFAOYSA...
Loading species OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading species MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading species GZSMAFANHDULAC-UHFFFAOYSA-u2...
Loading transition state TS...
Loading reaction CCC=CO+[O]O_C[CH]C=CO+OO...


Loading statistical mechanics parameters for SIIVGPQREKVCOP-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for SIIVGPQREKVCOP-UHFFFAOYSA...
Loading statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading statistical mechanics parameters for GZSMAFANHDULAC-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for GZSMAFANHDULAC-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2 + SIIVGPQREKVCOP-UHFFFAOYSA <=> MHAJPDPJQMAIIY-UHFFFAOYSA + GZSMAFANHDULAC-UHFFFAOYSA-u2...

CanTherm execution terminated at Sun Aug  6 03:09:30 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/CCC=CO+[O]O_C[CH]C=CO+OO.kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='CCC=CO+[O]O_C[CH]C=CO+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="SIIVGPQREKVCOP-UHFFFAOYSA", conformer=Conformer(E0=(-180.874,'kJ/mol'), modes=[IdealGasTranslation(mass=(72.0575,'amu')), NonlinearRotor(inertia=([26.4107,235.294,241.236],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([92.2232,193.278,196.398,279.338,323.962,419.304,526.332,764.65,847.318,901.988,944.428,1011.47,1074.72,1120.63,1152.52,1204.65,1266.89,1312.15,1335.16,1370.32,1385.39,1461.98,1475.71,1482.02,1751.37,2990.11,2993.81,3025.03,3062.59,3073.69,3095.14,3103.5,3879.01],'cm^-1'))]))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="GZSMAFANHDULAC-UHFFFAOYSA-u2", conformer=Conformer(E0=(-50.5262,'kJ/mol'), modes=[IdealGasTranslation(mass=(71.0497,'amu')), NonlinearRotor(inertia=([31.731,191.789,220.409],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([144.669,190.794,194.869,303.889,368.094,396.569,625.797,640.73,718.709,931.487,940.06,1014.2,1032.45,1106.1,1171.65,1232.05,1253.61,1348.94,1391.18,1459.62,1464.79,1478.48,1533.43,2977,3017.22,3082.69,3098.63,3150.35,3160.93,3872.1],'cm^-1'))], spinMultiplicity=2))], kinetics=Arrhenius(A=(2.55719e-07,'cm^3/(mol*s)'), n=5.22375, Ea=(11.925,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 2.03092, dn = +|- 0.0929825, dEa = +|- 0.511497 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-136.733,'kJ/mol'), modes=[IdealGasTranslation(mass=(105.055,'amu')), NonlinearRotor(inertia=([202.978,239.241,380.941],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([79.6852,100.359,129.947,157.63,180.14,199.544,256.815,340.616,365.323,476.569,500.976,533.212,682.262,755.852,817.997,900.234,929.945,1046.91,1075.51,1093.5,1104.82,1144.71,1226.93,1257.02,1262.9,1304.78,1385.85,1409.65,1429.36,1443.2,1471.7,1476.36,1666.54,2990.29,3049.82,3059.54,3074.11,3112.15,3133.64,3704.72,3856.03],'cm^-1'))], spinMultiplicity=2), frequency=(-1850.94,'cm^-1'), tunneling=Eckart(frequency=(-1850.94,'cm^-1'), E0_reac=(-174.679,'kJ/mol'), E0_TS=(-136.733,'kJ/mol'), E0_prod=(-184.908,'kJ/mol'))))
For reaction Reaction(label='CCC=CO+[O]O_C[CH]C=CO+OO', reactants=[Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2)), Species(label="SIIVGPQREKVCOP-UHFFFAOYSA", conformer=Conformer(E0=(-180.874,'kJ/mol'), modes=[IdealGasTranslation(mass=(72.0575,'amu')), NonlinearRotor(inertia=([26.4107,235.294,241.236],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([92.2232,193.278,196.398,279.338,323.962,419.304,526.332,764.65,847.318,901.988,944.428,1011.47,1074.72,1120.63,1152.52,1204.65,1266.89,1312.15,1335.16,1370.32,1385.39,1461.98,1475.71,1482.02,1751.37,2990.11,2993.81,3025.03,3062.59,3073.69,3095.14,3103.5,3879.01],'cm^-1'))]))], products=[Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))])), Species(label="GZSMAFANHDULAC-UHFFFAOYSA-u2", conformer=Conformer(E0=(-50.5262,'kJ/mol'), modes=[IdealGasTranslation(mass=(71.0497,'amu')), NonlinearRotor(inertia=([31.731,191.789,220.409],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([144.669,190.794,194.869,303.889,368.094,396.569,625.797,640.73,718.709,931.487,940.06,1014.2,1032.45,1106.1,1171.65,1232.05,1253.61,1348.94,1391.18,1459.62,1464.79,1478.48,1533.43,2977,3017.22,3082.69,3098.63,3150.35,3160.93,3872.1],'cm^-1'))], spinMultiplicity=2))], kinetics=Arrhenius(A=(2.55719e-07,'cm^3/(mol*s)'), n=5.22375, Ea=(11.925,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 2.03092, dn = +|- 0.0929825, dEa = +|- 0.511497 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-136.733,'kJ/mol'), modes=[IdealGasTranslation(mass=(105.055,'amu')), NonlinearRotor(inertia=([202.978,239.241,380.941],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([79.6852,100.359,129.947,157.63,180.14,199.544,256.815,340.616,365.323,476.569,500.976,533.212,682.262,755.852,817.997,900.234,929.945,1046.91,1075.51,1093.5,1104.82,1144.71,1226.93,1257.02,1262.9,1304.78,1385.85,1409.65,1429.36,1443.2,1471.7,1476.36,1666.54,2990.29,3049.82,3059.54,3074.11,3112.15,3133.64,3704.72,3856.03],'cm^-1'))], spinMultiplicity=2), frequency=(-1850.94,'cm^-1'), tunneling=Eckart(frequency=(-1850.94,'cm^-1'), E0_reac=(-174.679,'kJ/mol'), E0_TS=(-136.733,'kJ/mol'), E0_prod=(-184.908,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(2.55719e-07,'cm^3/(mol*s)'), n=5.22375, Ea=(11.925,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 2.03092, dn = +|- 0.0929825, dEa = +|- 0.511497 kJ/mol""")

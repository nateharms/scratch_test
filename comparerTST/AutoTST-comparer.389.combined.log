comparerTST.py:41 <module> INFO RUNNING WITH JOB NUMBER i = 389
comparerTST.py:45 <module> INFO Loading RMG Database ...
comparerTST.py:48 <module> INFO /home/harms.n/Code/RMG-database/input
thermo.py:760 loadLibraries INFO Loading thermodynamics library from thermo_DFT_CCSDTF12_BAC.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from CBS_QB3_1dHR.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from primaryThermoLibrary.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:760 loadLibraries INFO Loading thermodynamics library from KlippensteinH2O2.py in /home/harms.n/Code/RMG-database/input/thermo/libraries...
thermo.py:774 loadGroups INFO Loading thermodynamics group database from /home/harms.n/Code/RMG-database/input/thermo/groups...
transport.py:294 loadGroups INFO Loading transport group database from /home/harms.n/Code/RMG-database/input/transport/groups...
database.py:165 loadFamilies INFO Loading the user-specified kinetics families from /home/harms.n/Code/RMG-database/input/kinetics/families
statmech.py:526 loadGroups INFO Loading frequencies group database from /home/harms.n/Code/RMG-database/input/statmech/groups...
comparerTST.py:57 <module> INFO RMG Database Loaded
comparerTST.py:81 <module> INFO generateReactionsFromFamilies successfuly performed
comparerTST.py:141 performCalcs INFO chemkinRxn: Reaction(reactants=[Molecule(SMILES="O=CCCO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="O=C[CH]CO")], degeneracy=2, pairs=[[Molecule(SMILES="O=CCCO"), Molecule(SMILES="O=C[CH]CO")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:143 performCalcs INFO Ensuring resonance isomers have been generated
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
<type 'rmgpy.molecule.molecule.Molecule'>
[Molecule(SMILES="O=CCCO"), Molecule(SMILES="[O]O")]
[Molecule(SMILES="OO"), Molecule(SMILES="O=C[CH]CO")]
comparerTST.py:162 performCalcs INFO Generated one reaction:
comparerTST.py:163 performCalcs INFO [Reaction(reactants=[Molecule(SMILES="O=CCCO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="O=C[CH]CO")], degeneracy=2, pairs=[[Molecule(SMILES="O=CCCO"), Molecule(SMILES="O=C[CH]CO")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])]
comparerTST.py:172 performCalcs INFO The reaction of interest is as follows: 
comparerTST.py:173 performCalcs INFO <Molecule "O=CCCO"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "O=C[CH]CO">
comparerTST.py:175 performCalcs INFO asserting that the testReaction is Isomorphic
comparerTST.py:177 performCalcs INFO reaction: Reaction(reactants=[Molecule(SMILES="O=CCCO"), Molecule(SMILES="[O]O")], products=[Molecule(SMILES="OO"), Molecule(SMILES="O=C[CH]CO")], degeneracy=2, pairs=[[Molecule(SMILES="O=CCCO"), Molecule(SMILES="O=C[CH]CO")], [Molecule(SMILES="[O]O"), Molecule(SMILES="OO")]])
comparerTST.py:183 performCalcs INFO Labeling reactant atoms
comparerTST.py:193 performCalcs INFO Labeling product atoms
comparerTST.py:209 performCalcs INFO We have generated a H_Abstraction reaction that matches, and used it to label the atoms.
comparerTST.py:211 performCalcs INFO Calculating reaction kinetics
comparerTST.py:119 calculate INFO Calculating reaction rate for <Molecule "O=CCCO"> + <Molecule "[O]O"> <=> <Molecule "OO"> + <Molecule "O=C[CH]CO">
comparerTST.py:121 calculate INFO Selecting the appropriate TS distance database for family 'H_Abstraction'
comparerTST.py:123 calculate INFO Calculating kinetic data by calling qmCalc.getKineticData
reaction.py:619 loadKineticsData INFO Kinetics results file /gss_gpfs_scratch/harms.n/QMfiles/O=CCCO+[O]O_O=C[CH]CO+OO.kinetics does not exist or is invalid
reaction.py:520 generateTSGeometryDirectGuess INFO Generating a TS geometry via the direct guess method
reaction.py:300 generateBoundsMatrix INFO Generating bounds matrix for O=CCCO.[O]O
reaction.py:338 bmPreEdit INFO Changing lower limit 2.9 to 2.484712
reaction.py:338 bmPreEdit INFO Changing lower limit 2.538448 to 2.481728
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.35377859416
reaction.py:338 bmPreEdit INFO Changing lower limit 3.65 to 3.33195383943
reaction.py:561 generateTSGeometryDirectGuess INFO TS estimate made. About to try the search...
reaction.py:426 optimizeTS INFO Starting optimization steps of the TS search.
gaussian.py:535 optEstimate INFO Running loose optimization of TS with frozen center
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/O=CCCO+[O]O_O=C[CH]CO+OOEst.gjf
gaussian.py:590 optRxnCenter INFO Optimization of TS reaction center distances
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/O=CCCO+[O]O_O=C[CH]CO+OORxnC.gjf
reaction.py:443 optimizeTS INFO Optimizing TS attempt 1
gaussian.py:485 createInputFile INFO Creating input file
gaussian.py:189 writeInputFile INFO Writing gaussian input file None
gaussian.py:748 verifyOutputFile INFO Verifying output file /gss_gpfs_scratch/harms.n/QMscratch/O=CCCO+[O]O_O=C[CH]CO+OO.log
gaussian.py:516 createIRCFile INFO Creating IRC file
gaussian.py:189 writeInputFile INFO Writing gaussian input file /gss_gpfs_scratch/harms.n/QMscratch/O=CCCO+[O]O_O=C[CH]CO+OOIRC.gjf
gaussian.py:685 runIRC INFO Running IRC
gaussian.py:843 verifyIRCOutputFile INFO Verifying the IRC output file /gss_gpfs_scratch/harms.n/QMscratch/O=CCCO+[O]O_O=C[CH]CO+OOIRC.log
gaussian.py:878 verifyIRCOutputFile INFO Checking if all the success keywords are found in the file.
reaction.py:570 saveTSData INFO Saving TS result file /gss_gpfs_scratch/harms.n/QMfiles/O=CCCO+[O]O_O=C[CH]CO+OO.ts
gaussian.py:991 parse INFO Parsing the gaussian output /gss_gpfs_scratch/harms.n/QMscratch/O=CCCO+[O]O_O=C[CH]CO+OO.log
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/AKXKFZDCRYJKTF-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/AKXKFZDCRYJKTF-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C1
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/OUUQCZGPVNCOIJ-UHFFFAOYSA-u2.symm
symmetry.py:188 parse INFO Point group: Cs
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/MHAJPDPJQMAIIY-UHFFFAOYSA.symm
symmetry.py:188 parse INFO Point group: C2
gaussian.py:168 verifyOutputFile INFO Successful GaussianMolM062X quantum result in /gss_gpfs_scratch/harms.n/QMscratch/UALPZPNFSVJQBR-UHFFFAOYSA-u1.log
gaussian.py:268 generateQMData INFO Found a successful output file; using that.
symmetry.py:221 writeInputFile INFO Symmetry input file written to /gss_gpfs_scratch/harms.n/QMscratch/UALPZPNFSVJQBR-UHFFFAOYSA-u1.symm
symmetry.py:188 parse INFO Point group: Cs
CanTherm execution initiated at Tue Aug  8 05:58:36 2017

###############################################################
#                                                             #
#                          CanTherm                           #
#                                                             #
#   Version: 0.1.0 (14 May 2009)                              #
#   Authors: RMG Developers (rmg_dev@mit.edu)                 #
#   P.I.:    William H. Green (whgreen@mit.edu)               #
#   Website: http://rmg.sourceforge.net/                      #
#                                                             #
###############################################################

Loading species AKXKFZDCRYJKTF-UHFFFAOYSA...
Loading species OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading species MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading species UALPZPNFSVJQBR-UHFFFAOYSA-u1...
Loading transition state TS...
Loading reaction O=CCCO+[O]O_O=C[CH]CO+OO...


Loading statistical mechanics parameters for AKXKFZDCRYJKTF-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for AKXKFZDCRYJKTF-UHFFFAOYSA...
Loading statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for OUUQCZGPVNCOIJ-UHFFFAOYSA-u2...
Loading statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for MHAJPDPJQMAIIY-UHFFFAOYSA...
Loading statistical mechanics parameters for UALPZPNFSVJQBR-UHFFFAOYSA-u1...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for UALPZPNFSVJQBR-UHFFFAOYSA-u1...
Loading statistical mechanics parameters for TS...
Warning: No bond energy correction found for model chemistry: M062X/MG3S
Saving statistical mechanics parameters for TS...
Generating Arrhenius kinetics model for Arrhenius...
Saving kinetics for AKXKFZDCRYJKTF-UHFFFAOYSA + OUUQCZGPVNCOIJ-UHFFFAOYSA-u2 <=> UALPZPNFSVJQBR-UHFFFAOYSA-u1 + MHAJPDPJQMAIIY-UHFFFAOYSA...

CanTherm execution terminated at Tue Aug  8 05:58:38 2017
Saving kinetics data file /gss_gpfs_scratch/harms.n/QMfiles/O=CCCO+[O]O_O=C[CH]CO+OO.kinetics
Removing 'core*' files
Yay, reaction kinetics calculated!!!
Reaction(label='O=CCCO+[O]O_O=C[CH]CO+OO', reactants=[Species(label="AKXKFZDCRYJKTF-UHFFFAOYSA", conformer=Conformer(E0=(-342.887,'kJ/mol'), modes=[IdealGasTranslation(mass=(74.0368,'amu')), NonlinearRotor(inertia=([21.7214,228.688,233.683],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([52.8823,94.3664,239.656,263.695,405.272,519.124,782.287,859.549,996.512,1050.14,1108.34,1129.28,1204.98,1222.47,1280.4,1301.08,1399.65,1433.99,1449.97,1508.16,1833.68,2915.32,2965.22,2992.07,3015.1,3082.07,3850.05],'cm^-1'))])), Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="UALPZPNFSVJQBR-UHFFFAOYSA-u1", conformer=Conformer(E0=(-191.12,'kJ/mol'), modes=[IdealGasTranslation(mass=(73.0289,'amu')), NonlinearRotor(inertia=([26.8095,188.593,212.298],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([55.6056,193.859,287.515,313.513,391.785,568.614,717.999,922.498,969.764,990.294,1086.76,1119.76,1207.29,1226.92,1346.15,1395.2,1446.71,1469.07,1607.63,2957.47,2970.12,2977.19,3153.9,3861.88],'cm^-1'))], spinMultiplicity=2)), Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))]))], kinetics=Arrhenius(A=(9.73937e-09,'cm^3/(mol*s)'), n=5.66192, Ea=(30.0385,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 2.66372, dn = +|- 0.12858, dEa = +|- 0.707319 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-277.4,'kJ/mol'), modes=[IdealGasTranslation(mass=(107.034,'amu')), NonlinearRotor(inertia=([133.049,351.397,448.087],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([55.6943,82.0467,93.9978,139.611,170.12,227.842,299.098,352.096,388.577,457.342,515.206,585.009,846.553,886.918,1000.83,1040.88,1055.19,1087.51,1116.22,1128.02,1194.18,1318.27,1353.52,1396.3,1406.72,1417.39,1443.95,1493.34,1733.95,2959.13,3021.33,3065,3081.27,3687.47,3835.84],'cm^-1'))], spinMultiplicity=2), frequency=(-1864.78,'cm^-1'), tunneling=Eckart(frequency=(-1864.78,'cm^-1'), E0_reac=(-336.692,'kJ/mol'), E0_TS=(-277.4,'kJ/mol'), E0_prod=(-325.502,'kJ/mol'))))
For reaction Reaction(label='O=CCCO+[O]O_O=C[CH]CO+OO', reactants=[Species(label="AKXKFZDCRYJKTF-UHFFFAOYSA", conformer=Conformer(E0=(-342.887,'kJ/mol'), modes=[IdealGasTranslation(mass=(74.0368,'amu')), NonlinearRotor(inertia=([21.7214,228.688,233.683],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([52.8823,94.3664,239.656,263.695,405.272,519.124,782.287,859.549,996.512,1050.14,1108.34,1129.28,1204.98,1222.47,1280.4,1301.08,1399.65,1433.99,1449.97,1508.16,1833.68,2915.32,2965.22,2992.07,3015.1,3082.07,3850.05],'cm^-1'))])), Species(label="OUUQCZGPVNCOIJ-UHFFFAOYSA-u2", conformer=Conformer(E0=(6.19549,'kJ/mol'), modes=[IdealGasTranslation(mass=(32.9977,'amu')), NonlinearRotor(inertia=([0.800947,14.5112,15.3121],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([1245.9,1447.19,3645.15],'cm^-1'))], spinMultiplicity=2))], products=[Species(label="UALPZPNFSVJQBR-UHFFFAOYSA-u1", conformer=Conformer(E0=(-191.12,'kJ/mol'), modes=[IdealGasTranslation(mass=(73.0289,'amu')), NonlinearRotor(inertia=([26.8095,188.593,212.298],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([55.6056,193.859,287.515,313.513,391.785,568.614,717.999,922.498,969.764,990.294,1086.76,1119.76,1207.29,1226.92,1346.15,1395.2,1446.71,1469.07,1607.63,2957.47,2970.12,2977.19,3153.9,3861.88],'cm^-1'))], spinMultiplicity=2)), Species(label="MHAJPDPJQMAIIY-UHFFFAOYSA", conformer=Conformer(E0=(-134.382,'kJ/mol'), modes=[IdealGasTranslation(mass=(34.0055,'amu')), NonlinearRotor(inertia=([1.63801,18.4022,19.029],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([378.1,1029.14,1344.99,1458.5,3786.54,3787.27],'cm^-1'))]))], kinetics=Arrhenius(A=(9.73937e-09,'cm^3/(mol*s)'), n=5.66192, Ea=(30.0385,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 2.66372, dn = +|- 0.12858, dEa = +|- 0.707319 kJ/mol"""), transitionState=TransitionState(label="TS", conformer=Conformer(E0=(-277.4,'kJ/mol'), modes=[IdealGasTranslation(mass=(107.034,'amu')), NonlinearRotor(inertia=([133.049,351.397,448.087],'amu*angstrom^2'), symmetry=1), HarmonicOscillator(frequencies=([55.6943,82.0467,93.9978,139.611,170.12,227.842,299.098,352.096,388.577,457.342,515.206,585.009,846.553,886.918,1000.83,1040.88,1055.19,1087.51,1116.22,1128.02,1194.18,1318.27,1353.52,1396.3,1406.72,1417.39,1443.95,1493.34,1733.95,2959.13,3021.33,3065,3081.27,3687.47,3835.84],'cm^-1'))], spinMultiplicity=2), frequency=(-1864.78,'cm^-1'), tunneling=Eckart(frequency=(-1864.78,'cm^-1'), E0_reac=(-336.692,'kJ/mol'), E0_TS=(-277.4,'kJ/mol'), E0_prod=(-325.502,'kJ/mol'))))
We have calculated kinetics Arrhenius(A=(9.73937e-09,'cm^3/(mol*s)'), n=5.66192, Ea=(30.0385,'kJ/mol'), T0=(1,'K'), Tmin=(303.03,'K'), Tmax=(2500,'K'), comment="""Fitted to 59 data points; dA = *|/ 2.66372, dn = +|- 0.12858, dEa = +|- 0.707319 kJ/mol""")
